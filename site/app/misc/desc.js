module.exports = { 
  flags: 'It is a bit-vector to tell which optional fields does a Characteristic Value have',
  dInPolarity: 'The polarity of the digital input as a Boolean (0 = Normal, 1= Reversed)',
  debouncePeriod: 'The debounce period in ms',
  edgeSelection: 'The edge selection as an integer (1 = Falling edge, 2 = Rising edge, 3 = Both Rising and Falling edge)',
  dOutState: 'The current state of a digital output',
  dOutPolarity: 'The polarity of a digital ouput as a Boolean (0 = Normal, 1= Reversed)',
  aInCurrValue: 'The current value of the analog input',
  aOutCurrValue: 'The current state of the analogue output',
  sensorValue: 'Last or Current Measured Value from the Sensor',
  units: 'Measurement Units Definition e.g. Rate, example units = Feet per Second',
  minMeaValue: 'The minimum value measured by the sensor since power ON or reset',
  maxMeaValue: 'The maximum value measured by the sensor since power ON or reset',
  minRangeValue: 'The minimum value that can be measured by the sensor',
  maxRangeValue: 'The maximum value that can be measured by the sensor',
  appType: 'The application type of the sensor or actuator as a string depending on the use case',
  sensorType: 'The type of the sensor (for instance PIR type)',
  resetMinMaxMeaValues: 'Reset the Min and Max Measured Values to Current Value',
  dInState: 'The current state of a digital input',
  counter: 'The number of times the input transitions from 0 to 1',
  counterReset: 'Reset the Counter value',
  busyToClearDelay: 'Delay from the detection state to the clear state in ms',
  clearToBusyDelay: 'Delay from the clear state to the busy state in ms',
  instActivePwr: 'The current active power',
  minMeaActivePwr: 'The minimum active power measured by the sensor since it is ON',
  maxMeaActivePwr: 'The maximum active power measured by the sensor since it is ON',
  minRangeActivePwr: 'The minimum active power that can be measured by the sensor',
  maxRangeActivePwr: 'The maximum active power that can be measured by the sensor',
  cumulActivePwr: 'Last or Current Measured Value from the Sensor',
  activePwrCal: 'Request an active power calibration by writing the value of a calibrated load',
  instReactivePwr: 'The current reactive power',
  minMeaReactivePwr: 'The minimum reactive power measured by the sensor since it is ON',
  maxMeaReactivePwr: 'The maximum reactive power measured by the sensor since it is ON',
  minRangeReactivePwr: 'The minimum active power that can be measured by the sensor',
  maxRangeReactivePwr: 'The maximum reactive power that can be measured by the sensor',
  cumulReactivePwr: 'The cumulative reactive power since the last cumulative energy reset or device start',
  reactivePwrCal: 'Request a reactive power calibration by writing the value of a calibrated load',
  pwrFactor: 'The power factor of the load',
  currCal: 'Read or Write the current calibration coefficient',
  resetCumulEnergy: 'Reset both cumulative active/reactive power',
  onOff: 'On/off control for the timer input, 0=OFF, 1=ON',
  dimmer: 'Proportional control, integer value between 0 and 100 as a percentage',
  onTime: 'The time in seconds that the dimmer has been on (Dimmer value has to be > 0). Writing a value of 0 resets the counter',
  offTime: 'The time in seconds that the dimmer has been off  (dimmer value less or equal to 0) Writing a value of 0 resets the counter. ',
  setPointValue: 'The setpoint value',
  colour: 'A string representing a value in some colour space',
  eventId: 'The event identifier as a string',
  startTime: 'Time when the load control event will start started',
  durationInMin: 'The duration of the load control event',
  criticalLevel: 'The criticality of the event.  The device receiving the event will react in an appropriate fashion for the device',
  avgLoadAdjPct: 'Defines the maximum energy usage of the receivng device, as a percentage of the device\'s normal maximum energy usage',
  dutyCycle: 'Defines the duty cycle for the load control event, i.e, what percentage of time the receiving device is allowed to be on',
  xValue: 'The measured value along the X axis',
  yValue: 'The measured value along the Y axis',
  zValue: 'The measured value along the Z axis',
  compassDir: 'Measured Direction',
  currentTime: 'Unix Time. A signed integer representing the number of seconds since Jan 1st, 1970 in the UTC time zone',
  fracTime: 'For shorter times of a fraction of a second (i.e. 0.23)',
  minXValue: 'The minimum measured value along the X axis',
  maxXValue: 'The maximum measured value along the X axis',
  minYValue: 'The minimum measured value along the Y axis',
  maxYValue: 'The maximum measured value along the Y axis',
  minZValue: 'The minimum measured value along the Z axis',
  latitude: 'The decimal notation of latitude, e.g. -43.5723 (World Geodetic System 1984)',
  longitude: 'The decimal notation of longitude, e.g. 153.21760 (World Geodetic System 1984)',
  uncertainty: 'The accuracy of the position in meters',
  velocity: 'The velocity of the device as defined in 3GPP 23.032 GAD specification. This set of values may not be available if the device is static',
  timestamp: 'The timestamp of when the location measurement was performed',
  currentPos: 'Current position or desired position of a positioner actuator',
  transTime: 'The time expected to move the actuator to the new position',
  remainTime: 'The time remaining in an operation',
  minLimit: 'The minimum value that can be measured by the sensor',
  maxLimit: 'The maximum value that can be measured by the sensor',
  timeDuration: 'The duration of the time delay',
  minOffTime: 'The duration of the rearm delay (i.e. the delay from the end of one cycle until the beginning of the next, the inhibit time)',
  clip: 'Audio Clip that is playable (i.e. short audio recording indicating the floor in an elevator)',
  trigger: 'Trigger initiating actuation',
  soundDuration: 'The duration of the sound once trigger',
  cumulTime: 'The total time in seconds that the timer input is true. Writing a 0 resets the time',
  digitalState: 'The current state of the timer output',
  eventCounter: 'Counts the number of times the timer output transitions from 0 to 1',
  mode: 'Type of timer pattern used by the patterns',
  text: 'A string of text',
  xCoord: 'X Coordinate',
  yCoord: 'Y Coordinate',
  maxXCoord: 'The highest X coordinate the display supports before wrapping to the next line',
  maxYCoord: 'The highest Y coordinate the display supports before wrapping to the next line',
  clearDisplay: 'Command to clear the display',
  contrast: 'Proportional control, integer value between 0 and 100 as a percentage',
  incInputState: 'Indicates an increase control action',
  decInputState: 'Indicates a decrease control action',
  upCounter: 'Counts the number of times the increase control has been operated. Writing a 0 resets the counter',
  downCounter: 'Counts the times the decrease control has been operated. Writing a 0 resets the counter',
  mStateIn: 'The current state of a multistate input or selector' };
